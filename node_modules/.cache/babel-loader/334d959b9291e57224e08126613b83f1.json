{"ast":null,"code":"import { applyMiddleware, createStore } from \"redux\"; // import thunkMiddleware from 'redux-thunk'\n\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport rootReducer from \"./reducers\";\nexport default function configureStore(preloadedState) {\n  const middlewares = [// thunkMiddleware\n  ];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  if (process.env.NODE_ENV !== \"production\" && module.hot) {\n    module.hot.accept(\"./reducers\", () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}","map":{"version":3,"sources":["/home/kris/projekty/budget-app/src/data/store.js"],"names":["applyMiddleware","createStore","composeWithDevTools","rootReducer","configureStore","preloadedState","middlewares","middlewareEnhancer","enhancers","composedEnhancers","store","process","env","NODE_ENV","module","hot","accept","replaceReducer"],"mappings":"AAAA,SAASA,eAAT,EAA0BC,WAA1B,QAA6C,OAA7C,C,CACA;;AACA,SAASC,mBAAT,QAAoC,0BAApC;AAEA,OAAOC,WAAP,MAAwB,YAAxB;AAEA,eAAe,SAASC,cAAT,CAAwBC,cAAxB,EAAwC;AACrD,QAAMC,WAAW,GAAG,CAClB;AADkB,GAApB;AAGA,QAAMC,kBAAkB,GAAGP,eAAe,CAAC,GAAGM,WAAJ,CAA1C;AAEA,QAAME,SAAS,GAAG,CAACD,kBAAD,CAAlB;AACA,QAAME,iBAAiB,GAAGP,mBAAmB,CAAC,GAAGM,SAAJ,CAA7C;AAEA,QAAME,KAAK,GAAGT,WAAW,CAACE,WAAD,EAAcE,cAAd,EAA8BI,iBAA9B,CAAzB;;AAEA,MAAIE,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAAzB,IAAyCC,MAAM,CAACC,GAApD,EAAyD;AACvDD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,YAAlB,EAAgC,MAAMN,KAAK,CAACO,cAAN,CAAqBd,WAArB,CAAtC;AACD;;AAED,SAAOO,KAAP;AACD","sourcesContent":["import { applyMiddleware, createStore } from \"redux\";\n// import thunkMiddleware from 'redux-thunk'\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nimport rootReducer from \"./reducers\";\n\nexport default function configureStore(preloadedState) {\n  const middlewares = [\n    // thunkMiddleware\n  ];\n  const middlewareEnhancer = applyMiddleware(...middlewares);\n\n  const enhancers = [middlewareEnhancer];\n  const composedEnhancers = composeWithDevTools(...enhancers);\n\n  const store = createStore(rootReducer, preloadedState, composedEnhancers);\n\n  if (process.env.NODE_ENV !== \"production\" && module.hot) {\n    module.hot.accept(\"./reducers\", () => store.replaceReducer(rootReducer));\n  }\n\n  return store;\n}\n"]},"metadata":{},"sourceType":"module"}